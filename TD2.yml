openapi: 3.0.1
info:
  title: Cin√©ma STD21021 API
  description: 'Global description of my API'
  version: 1.0.0
servers:
 - url: https://STD21000.com
tags: 
 - name: Films
 - name: Projections
 - name: Category
paths:
 /film/{id}:
    get:
      tags:
        - Films
      operationId: get film by identifier
      summary: Get film by identifier
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        200: 
          description: List of films
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Film'
        400:
          description: Bad request
    delete:
      tags:
        - Films
      operationId: delete film by identifier
      summary: Delete film by identifier
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        200: 
          description: Ressource deleted
        400:
          description: Bad request
    patch:
      tags:
        - Films
      operationId: Update existing films by identifier
      summary: Update existing films by identifier
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        200:
          description: The updated films
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Film'
        400:
          description: Bad request
    put:
      tags:
        - Films
      operationId: Put film by identifier
      summary: Put film by identifier
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        200:
          description: The created or updated films
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Film'
        400:
          description: Bad request
 /films:
    get:
      tags:
        - Films
      operationId: getFilms
      summary: Get all films
      description: Get all films with details
      parameters:
        - name: page
          in: query
          schema:
            type: integer
      responses:
        200: 
          description: List of films
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/Film'
        400:
          description: Bad request
    post: 
      tags:
        - Films
      operationId: create film
      summary : Create new fim
      description: Create new film
      requestBody:
        description: Film to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFilm'
        required: true
      responses:
        200:
          description: List of fims
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Film'
        400:
          description: Bad request 
    put:
      tags:
        - Films
      operationId: Create new film or update existing films
      summary : Create new film or update existing films
      description: Update films when id are provided, create them otherwise
      requestBody:
        description: Film to be created
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/Film'
        required: true
      responses:
        200:
          description: The created or updated films
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Film'
        400:
          description: Bad request
    patch:
      tags:
        - Films
      operationId: Update existing films
      summary : Update existing films
      description: |
        Possible updates on:
        * title: change
        * description: change
        * duration: change
        * ProjectionDetails: add or change
      requestBody:
        description: Film to be updated
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/Film'
              examples:
                changeTitle:
                  summary: Changer title
                  description: How to change film's name
                  value:
                    title: string
                changeDescription:
                  summary: Change description
                  description: How to change film's description
                  value:
                    description: string
                changeDuration:
                  summary: Change duration
                  description: How to change film's duration
                  value:
                    duration: string
                changeProjectionDetails:
                  summary: Change projectionDetails
                  description: How to change film's projectionDetails
                  value:
                    room: string
                    day: string
        required: true
      responses:
        200:
          description: The updated films
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Film'
        400:
          description: Bad request
 /projection/{id}:
    get:
      tags:
        - Projections
      operationId: get projections by identifier
      summary: Get projections by identifier
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        200: 
          description: List of projections
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Projection'
        400:
          description: Bad request
    delete:
      tags:
        - Projections
      operationId: delete projection by identifier
      summary: Delete projection by identifier
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        200: 
          description: Ressource deleted
        400:
          description: Bad request
    patch:
      tags:
        - Projections
      operationId: Update existing projection by identifier
      summary: Update existing projection by identifier
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        200:
          description: The updated projection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projection'
        400:
          description: Bad request
    put:
      tags:
        - Projections
      operationId: Put projection by identifier
      summary: Put projection by identifier
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        200:
          description: The created or updated projection
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projection'
        400:
          description: Bad request
 /projection:
    get:
      tags:
        - Projections
      operationId: getProjections
      summary: Get all projections
      description: Get all projections with details
      parameters:
        - name: page
          in: query
          schema:
            type: integer
      responses:
        200: 
          description: List of projections
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/Projection'
        400:
          description: Bad request
    post: 
      tags:
        - Projections
      operationId: create projection
      summary : Create new projection
      description: Create new projection
      requestBody:
        description: Projection to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjection'
        required: true
      responses:
        200:
          description: List of projections
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projection'
        400:
          description: Bad request 
    put:
      tags:
        - Projections
      operationId: Create new projection or update existing projection
      summary : Create new projection or update existing projection
      description: Update projections when id are provided, create them otherwise
      requestBody:
        description: Projection to be created
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projection'
        required: true
      responses:
        200:
          description: The created or updated projections
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projection'
        400:
          description: Bad request
    patch:
      tags:
        - Projections
      operationId: Update existing projections
      summary : Update existing projection
      description: |
        Possible updates on:
        * Film: change
        * Room: change
        * Hour: change
      requestBody:
        description: Projection to be updated
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projection'
              examples:
                changeFilm:
                  summary: Change Film
                  description: How to change projection's film
                  value:
                    Film: array
                changeRoom:
                  summary: Change Room
                  description: How to change projection's room
                  value:
                    Room: string
                changeHour:
                  summary: Change hour
                  description: How to change projection's hour
                  value:
                    hour: string
        required: true
      responses:
        200:
          description: The updated films
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projection'
        400:
          description: Bad request
 /category:
    get:
      tags:
        - Category
      operationId: get all category
      summary: Get category
      description: Get category
      responses:
        200: 
          description: List of Category
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Category'
        400:
          description: Bad request
    post: 
      tags:
        - Category
      operationId: create filmList per Category
      summary : create filmList per Category
      parameters:
        - name: category
          in: query
          schema:
            type: string
          required: true
      requestBody:
        description: Film to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFilm'
        required: true
      responses:
        200:
          description: List of fims
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Film'
        400:
          description: Bad request
 /category/{name}:
    get:
      tags:
        - Category
      operationId: get films by category name
      summary: get films by category name
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
      responses:
        200: 
          description: List of films
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/CreateFilm'
        400:
          description: Bad request
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: number
          example: 2
        name:
          type: string
          example: "Romantique"
    Room:
      type: object
      properties:
        location:
          type: string
          example: "A"
        capacity:
          type: number
          example: 100
    CreateProjection:
      type: object
      properties:
        Film:
          type: array
          items:
            $ref: '#/components/schemas/Film'
        Room:
          type: string
          example: "A"
        Hour:
          type: array
          items:
            $ref: '#/components/schemas/Room'
    Projection:
      allOf:
        - $ref: '#/components/schemas/CreateProjection'
      type: object
      properties:
        id:
          type: integer
          example: 10
    CreateFilm:
      type: object
      properties:
        title:
          type: string
          example: "Mission Impossible"
        duration:
          type: string
          example: "2H 30"
        summary:
          type: string
          example: "Lorem ipsum"
        director:
          type: string
          example: "David Lynch"
        release date:
          type: string
          example: "21 Juillet 2021"
    Film:
      allOf:
        - $ref: '#/components/schemas/CreateFilm'
      type: object
      properties:
        id:
          type: integer
          example: 10
